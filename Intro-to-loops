Introduction to Loops
Suppose we want to print() each item from a list of dog_breeds. We would need to use the following code snippet:

dog_breeds = ['french_bulldog', 'dalmatian', 'shihtzu', 'poodle', 'collie']

print(dog_breeds[0])
print(dog_breeds[1])
print(dog_breeds[2])
print(dog_breeds[3])
print(dog_breeds[4])
This seems inefficient. Luckily, Python (and most other programming languages) gives us an easier way of using, or iterating through, every item in a list. We can use loops! A loop is a way of repeating a set of code many times.

In this lesson, we’ll be learning about:

Loops that let us move through each item in a list, called for loops
Loops that keep going until we tell them to stop, called while loops
Loops that create new lists, called list comprehensions

Example:

dog_breeds = ['french_bulldog', 'dalmatian', 'shihtzu', 'poodle', 'collie']

for breed in dog_breeds:
    print(breed)
    
This will print each breed in dog_breeds.

Create a For Loop
In the previous exercise, we saw that we can print each item in a list using a for loop. A for loop lets us perform an action on each item in a list. Using each element of a list is known as iterating.

This loop prints each breed in dog_breeds:

dog_breeds = ['french_bulldog', 'dalmation', 'shihtzu', 'poodle', 'collie']
for breed in dog_breeds:
    print(breed)
    
The general way of writing a for loop is:

for <temporary variable> in <list variable>:
    <action>
    
In our dog breeds example, breed was the temporary variable, dog_breeds was the list variable, and print(breed) was the action performed on every item in the list.

Our temporary variable can be named whatever we want and does not need to be defined beforehand. Each of the following code snippets does the exact same thing as our example:

for i in dog_breeds:
    print(i)
for dog in dog_breeds:
    print(dog)
    
Notice that in all of these examples the print statement is indented. Everything in the same level of indentation after the for loop declaration is included in the for loop, and run every iteration.

If we forget to indent, we’ll get an IndentationError.
